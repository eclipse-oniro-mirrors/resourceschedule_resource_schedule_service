# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../cgroup_sched/cgroup_sched.gni")
import("../ressched.gni")

config("ressched_config") {
  include_dirs = [
    "${ressched_common}/include",
    "resschedmgr/resschedfwk/include",
    "resschedmgr/pluginbase/include",
  ]
}

config("resschedsvc_public_config") {
  include_dirs = [
    "${ressched_common}/include",
    "resschedmgr/resschedfwk/include",
    "resschedmgr/pluginbase/include",
  ]
}

config("resschedsvc_private_config") {
  include_dirs = [
    "resschedservice/include",
    "../sched_controller/common_event/include",
    "../sched_controller/observer/include",
  ]
}

ohos_shared_library("resschedsvc") {
  configs = [ ":resschedsvc_private_config" ]

  public_configs = [ ":resschedsvc_public_config" ]

  defines = []
  include_dirs = []

  sources = [
    "../sched_controller/common_event/src/event_controller.cpp",
    "../sched_controller/observer/src/audio_observer.cpp",
    "../sched_controller/observer/src/camera_observer.cpp",
    "../sched_controller/observer/src/observer_manager.cpp",
    "resschedmgr/resschedfwk/src/config_reader.cpp",
    "resschedmgr/resschedfwk/src/kill_process.cpp",
    "resschedmgr/resschedfwk/src/plugin_mgr.cpp",
    "resschedmgr/resschedfwk/src/plugin_switch.cpp",
    "resschedmgr/resschedfwk/src/res_sched_mgr.cpp",
    "resschedservice/src/res_sched_service.cpp",
    "resschedservice/src/res_sched_service_ability.cpp",
    "resschedservice/src/res_sched_service_stub.cpp",
  ]

  deps = [
    "${cgroup_sched_framework}:cgroup_sched",
    "${ressched_interfaces}/innerkits/ressched_client:ressched_client",
    "//third_party/libxml2:xml2",
  ]

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "audio_framework:audio_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hisysevent_native:libhisyseventmanager",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (device_movement_perception_enable) {
    defines += [ "DEVICE_MOVEMENT_PERCEPTION_ENABLE" ]
    external_deps += [ "movement:movement_client" ]
    sources +=
        [ "../sched_controller/observer/src/device_movement_observer.cpp" ]
  }

  if (ressched_with_telephony_state_registry_enable) {
    defines += [ "RESSCHED_TELEPHONY_STATE_REGISTRY_ENABLE" ]
    external_deps += [
      "core_service:tel_core_service_api",
      "state_registry:tel_state_registry_api",
    ]
    sources +=
        [ "../sched_controller/observer/src/sched_telephony_observer.cpp" ]
  }

  if (ressched_with_customization_config_policy_enable) {
    external_deps += [
      "config_policy:configpolicy_util"
      ]
    defines += [ "RESSCHED_CUSTOMIZATION_CONFIG_POLICY_ENABLE" ]
  }
  
  version_script = "libresschedsvc.versionscript"
  shlib_type = "sa"
  subsystem_name = "resourceschedule"
  part_name = "resource_schedule_service"
}

# for unittest
ohos_static_library("resschedsvc_static") {
  configs = []

  public_configs = [
    ":resschedsvc_private_config",
    ":resschedsvc_public_config",
  ]

  defines = []

  include_dirs = []

  sources = [
    "../sched_controller/common_event/src/event_controller.cpp",
    "../sched_controller/observer/src/audio_observer.cpp",
    "../sched_controller/observer/src/camera_observer.cpp",
    "../sched_controller/observer/src/observer_manager.cpp",
    "resschedmgr/resschedfwk/src/config_reader.cpp",
    "resschedmgr/resschedfwk/src/kill_process.cpp",
    "resschedmgr/resschedfwk/src/plugin_mgr.cpp",
    "resschedmgr/resschedfwk/src/plugin_switch.cpp",
    "resschedmgr/resschedfwk/src/res_sched_mgr.cpp",
    "resschedservice/src/res_sched_service.cpp",
    "resschedservice/src/res_sched_service_ability.cpp",
    "resschedservice/src/res_sched_service_stub.cpp",
  ]

  deps = [
    "${cgroup_sched_framework}:cgroup_sched",
    "${ressched_interfaces}/innerkits/ressched_client:ressched_client",
    "//third_party/libxml2:xml2",
  ]

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "audio_framework:audio_client",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "eventhandler:libeventhandler",
    "hisysevent_native:libhisysevent",
    "hisysevent_native:libhisyseventmanager",
    "hitrace_native:hitrace_meter",
    "hiviewdfx_hilog_native:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  if (device_movement_perception_enable) {
    defines += [ "DEVICE_MOVEMENT_PERCEPTION_ENABLE" ]
    external_deps += [ "movement:movement_client" ]
    sources +=
        [ "../sched_controller/observer/src/device_movement_observer.cpp" ]
  }

  if (ressched_with_telephony_state_registry_enable) {
    defines += [ "RESSCHED_TELEPHONY_STATE_REGISTRY_ENABLE" ]
    external_deps += [
      "core_service:tel_core_service_api",
      "state_registry:tel_state_registry_api",
    ]
    sources +=
        [ "../sched_controller/observer/src/sched_telephony_observer.cpp" ]
  }

  if (ressched_with_customization_config_policy_enable) {
    external_deps += [ "config_policy:configpolicy_util" ]
    defines += [ "RESSCHED_CUSTOMIZATION_CONFIG_POLICY_ENABLE" ]
  }

  subsystem_name = "resourceschedule"
  part_name = "resource_schedule_service"
}
