# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("//build/ohos.gni")
import("../../../../ressched/ressched.gni")
import("../../../ressched_executor.gni")

idl_gen_interface("ressched_executor_client_interface") {
  src_idl = rebase_path("IResSchedExeService.idl")
  log_domainid = "0xD001740"
  log_tag = "ResSchedExe"
}

config("client_private_config") {
  include_dirs = [
    "${ressched_common}/include",
    "${resschedexe_common}/include",
  ]
}

config("client_public_config") {
  include_dirs = [
    "include",
    "${target_gen_dir}",
  ]
}

ohos_shared_library("resschedexe_client") {
  output_values = get_target_outputs(":ressched_executor_client_interface")

  configs = [ ":client_private_config" ]

  public_configs = [ ":client_public_config" ]

  sources = [ "src/res_sched_exe_client.cpp" ]
  sources += filter_include(output_values, [ "*_proxy.cpp" ])

  deps = [
    ":ressched_executor_client_interface",
    "${ressched_common}:ressched_common_utils",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  public_external_deps = [ "json:nlohmann_json_static" ]

  innerapi_tags = [ "platformsdk" ]
  version_script = "libresschedexeclient.versionscript"
  subsystem_name = "resourceschedule"
  part_name = "resource_schedule_service"

  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
}

ohos_source_set("res_sched_exe_service_stub") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  branch_protector_ret = "pac_ret"

  public_configs = [ ":client_public_config" ]
  output_values = get_target_outputs(":ressched_executor_client_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])
  deps = [ ":ressched_executor_client_interface" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]
  subsystem_name = "resourceschedule"
  part_name = "resource_schedule_service"
}
