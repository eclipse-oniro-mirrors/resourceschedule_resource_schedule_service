# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("//build/ohos.gni")
import("//build/test.gni")
import("../../../ressched.gni")

idl_gen_interface("res_sched_event_listener_interface") {
  src_idl = rebase_path("IResSchedEventListener.idl")
}

idl_gen_interface("res_sched_service_interface") {
  src_idl = rebase_path("IResSchedService.idl")
}

idl_gen_interface("res_sched_systemload_notifier_interface") {
  src_idl = rebase_path("IResSchedSystemloadNotifier.idl")
}

config("client_private_config") {
  include_dirs = [ "${ressched_common}/include" ]
}

config("client_public_config") {
  include_dirs = [
    "include",
    "${target_gen_dir}",
  ]
}

ohos_source_set("res_sched_service_stub") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  output_values = get_target_outputs(":res_sched_service_interface")
  sources = filter_include(output_values, [ "*_stub.cpp" ])
  public_configs = []
  deps = [ ":res_sched_service_interface" ]
  part_name = "resource_schedule_service"
  subsystem_name = "resourceschedule"
  external_deps = [
    "c_utils:utils",
    "ipc:ipc_core",
  ]
}

ohos_shared_library("ressched_client") {
  configs = [ ":client_private_config" ]

  public_configs = [ ":client_public_config" ]
  deps = [
    ":res_sched_event_listener_interface",
    ":res_sched_service_interface",
    ":res_sched_systemload_notifier_interface",
  ]

  sources = [
    "src/res_sa_init.cpp",
    "src/res_sched_client.cpp",
    "src/res_sched_common_death_recipient.cpp",
  ]

  output_values = get_target_outputs(":res_sched_service_interface")
  sources += filter_include(output_values, [ "*.cpp" ])

  event_listener_output_values =
      get_target_outputs(":res_sched_event_listener_interface")
  sources += filter_include(event_listener_output_values, [ "*.cpp" ])

  systemload_notifier_output_values =
      get_target_outputs(":res_sched_systemload_notifier_interface")
  sources += filter_include(systemload_notifier_output_values, [ "*.cpp" ])

  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "ipc:ipc_core",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
  ]

  install_images = [
    system_base_dir,
    updater_base_dir,
  ]

  public_external_deps = [ "json:nlohmann_json_static" ]

  innerapi_tags = [ "platformsdk" ]
  version_script = "libressched_client.versionscript"
  subsystem_name = "resourceschedule"
  part_name = "resource_schedule_service"

  branch_protector_ret = "pac_ret"

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
}
