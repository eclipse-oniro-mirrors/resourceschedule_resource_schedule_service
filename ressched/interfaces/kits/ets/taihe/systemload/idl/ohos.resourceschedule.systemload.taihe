/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!sts_inject("""
    loadLibrary("systemload_taihe_native.z");
""")
@!namespace("@ohos.resourceschedule.systemload", "systemLoad")
enum SystemLoadLevel: i32 {LOW = 0, NORMAL = 1, MEDIUM = 2, HIGH = 3, OVERHEATED = 4, WARNING = 5, EMERGENCY = 6, ESCAPE = 7}

@!sts_inject("""
    export function on(type: "systemLoadChange", callback:(level: SystemLoadLevel) => void) {
        on("systemLoadChange", callback, callback);
    }
    export function off(type: "systemLoadChange", callback:(level: SystemLoadLevel) => void) {
        on("systemLoadChange", callback, callback);
    }
""")

@on_off
function onSystemLoadChange(callback: (level: SystemLoadLevel) => void, opq: Opaque) : void;

@on_off
function offSystemLoadChange(callback: (level: SystemLoadLevel) => void, opq: Opaque) : void;

@gen_promise("getLevel")
function getLevelSync(): SystemLoadLevel;